<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.dtyunxi.yingzi</groupId>
        <artifactId>yingzi-center-breeding</artifactId>
        <version>0.1.0-SNAPSHOT</version>
    </parent>

    <artifactId>yingzi-center-breedingservice</artifactId>
    <packaging>war</packaging>

    <dependencies>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>3.0.1</version>
            <scope>provided</scope>
        </dependency>

        <!-- hsf 支持 -->
        <dependency>
            <groupId>com.taobao.hsf</groupId>
            <artifactId>hsf.remoting.dubbo</artifactId>
            <version>${hsf-dubbo.version}</version>
        </dependency>
        

        <!--支持应用api层-->
        <dependency>
            <groupId>com.dtyunxi.yingzi</groupId>
            <artifactId>yingzi-center-breedingapi</artifactId>
            <version>0.1.0-SNAPSHOT</version>
        </dependency>

        <!-- 使用哪个中心，则手动引入基础中台的依赖 -->
        <!--<dependency>-->
            <!--<groupId>com.dtyunxi.yundt</groupId>-->
            <!--<artifactId>yundt-center-breedingservice</artifactId>-->
            <!--<version>0.1.0-SNAPSHOT</version>-->
            <!--<classifier>dev</classifier>-->
        <!--</dependency>-->
        <!--commons层-->
        <dependency>
            <groupId>com.dtyunxi.yundt</groupId>
            <artifactId>yundt-commons</artifactId>
            <version>0.9.0-SNAPSHOT</version>
        </dependency>


        <!-- test -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${spring.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.spockframework</groupId>
            <artifactId>spock-spring</artifactId>
            <version>1.0-groovy-2.4</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.codehaus.groovy</groupId>
                    <artifactId>groovy-all</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency> <!-- only required if Hamcrest matchers are used -->
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-core</artifactId>
            <version>1.3</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.athaydes</groupId>
            <artifactId>spock-reports</artifactId>
            <version>1.2.13</version>
            <scope>test</scope>
            <!-- this avoids affecting your version of Groovy/Spock -->
            <exclusions>
                <exclusion>
                    <groupId>*</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!--<dependency>-->
            <!--<groupId>org.springframework.cloud</groupId>-->
            <!--<artifactId>spring-cloud-starter-pandora</artifactId>-->
            <!--<version>1.1</version>-->
            <!--<scope>test</scope>-->
            <!--<exclusions>-->
                <!--<exclusion>-->
                    <!--<groupId>org.slf4j</groupId>-->
                    <!--<artifactId>log4j-over-slf4j</artifactId>-->
                <!--</exclusion>-->
            <!--</exclusions>-->
        <!--</dependency>
        <dependency>
            <groupId>com.dtyunxi</groupId>
            <artifactId>dtyunxi-third</artifactId>
            <version>0.4.0-SNAPSHOT</version>
            <type>pom</type>
        </dependency>-->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>5.1.44</version>
        </dependency>

    </dependencies>

    <build>
        <finalName>yingzi-center-breedingservice</finalName>
        <plugins>
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.0.2</version>
                <executions>
                    <execution>
                        <id>devjar</id>
                        <phase>package</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                        <configuration>
                            <!-- 添加classifier修饰以区别于war，保证上传成功 -->
                            <classifier>dev</classifier>
                            <includes>
                                <include>**/*</include>
                            </includes>
                            <excludes>
                                <exclude>com/dtyunxi/config/</exclude>
                            </excludes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- deploy时只上传jar包到远程仓库的配置 -->
            <plugin>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>2.8.2</version>
                <executions>
                    <execution>
                        <id>default-deploy</id>
                        <phase>deploy</phase>
                        <goals>
                            <goal>deploy</goal>
                        </goals>
                        <!-- skip默认deploy插件的执行 -->
                        <configuration>
                            <skip>true</skip>
                        </configuration>
                    </execution>
                    <execution>
                        <id>deploy-file</id>
                        <phase>deploy</phase>
                        <goals>
                            <goal>deploy</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.18.1</version>
                <configuration>
                    <includes>
                        <include>**/*Spec.**</include>
                    </includes>
                    <testFailureIgnore>true</testFailureIgnore>
                    <!--<systemPropertyVariables> -->
                    <!--&lt;!&ndash;生成结果存放路径&ndash;&gt; -->
                    <!--<jacoco-agent.destfile>target/jacoco.exec</jacoco-agent.destfile> -->
                    <!--</systemPropertyVariables> -->
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.gmavenplus</groupId>
                <artifactId>gmavenplus-plugin</artifactId>
                <version>1.5</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>addTestSources</goal>
                            <goal>testCompile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
        <filters>
            <filter>src/main/filters/filter-${deploy.env}.properties</filter>
        </filters>
    </build>
</project>
